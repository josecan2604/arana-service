services:
  postgresql:
    container_name: postgresql
    image: postgres:15
    ports:
      - "5432:5432"
    networks:
      - batch_network
    volumes:
      - challenge_postgresql_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    environment:
        POSTGRES_USER: "${POSTGRES_USER}"
        POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
        POSTGRES_DB: "${POSTGRES_DB}"
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    ports:
      - "9000:9000"  # API S3
      - "9001:9001"  # MinIO Web Console
    networks:
      - batch_network
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
    command: server --console-address ":9001" /data
    volumes:
      - challenge_minio_data:/data
  # Include all the necessary settings to include a document management service in the stack
  # Remember to configure this service to limit the memory to 50MB
  file-management-service:
    image: jarana26/file-service:latest #Public Repo
    container_name: file_service
    depends_on:
      - postgresql
      - minio
    ports:
      - "8080:8080"
    networks:
      - batch_network
    environment:
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL}"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
      MINIO_ENDPOINT: "${MINIO_ENDPOINT}"
      MINIO_ACCESS_KEY: "${MINIO_ROOT_USER}"
      MINIO_SECRET_KEY: "${MINIO_ROOT_PASSWORD}"
      MINIO_BUCKET: "${MINIO_BUCKET}"

      JAVA_OPTS: "${JAVA_OPTS}"


    restart: always
volumes:
  challenge_postgresql_data:
    driver: local
  challenge_minio_data:
    driver: local

networks:
  batch_network:
    driver: bridge
